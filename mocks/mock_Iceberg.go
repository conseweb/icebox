// Code generated by MockGen. DO NOT EDIT.
// Source: helper.go

// Package mocks is a generated GoMock package.
package mocks

import (
	protos "github.com/conseweb/icebox/protos"
	gomock "github.com/golang/mock/gomock"
	context "golang.org/x/net/context"
	reflect "reflect"
)

// MockIceberg is a mock of Iceberg interface
type MockIceberg struct {
	ctrl     *gomock.Controller
	recorder *MockIcebergMockRecorder
}

// MockIcebergMockRecorder is the mock recorder for MockIceberg
type MockIcebergMockRecorder struct {
	mock *MockIceberg
}

// NewMockIceberg creates a new mock instance
func NewMockIceberg(ctrl *gomock.Controller) *MockIceberg {
	mock := &MockIceberg{ctrl: ctrl}
	mock.recorder = &MockIcebergMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIceberg) EXPECT() *MockIcebergMockRecorder {
	return m.recorder
}

// Hello mocks base method
func (m *MockIceberg) Hello(ctx context.Context, req *protos.HiRequest) (*protos.HiReply, error) {
	ret := m.ctrl.Call(m, "Hello", ctx, req)
	ret0, _ := ret[0].(*protos.HiReply)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Hello indicates an expected call of Hello
func (mr *MockIcebergMockRecorder) Hello(ctx, req interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Hello", reflect.TypeOf((*MockIceberg)(nil).Hello), ctx, req)
}

// NegotiateKey mocks base method
func (m *MockIceberg) NegotiateKey(ctx context.Context, req *protos.NegotiateRequest) (*protos.NegotiateReply, error) {
	ret := m.ctrl.Call(m, "NegotiateKey", ctx, req)
	ret0, _ := ret[0].(*protos.NegotiateReply)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NegotiateKey indicates an expected call of NegotiateKey
func (mr *MockIcebergMockRecorder) NegotiateKey(ctx, req interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NegotiateKey", reflect.TypeOf((*MockIceberg)(nil).NegotiateKey), ctx, req)
}

// CheckDevice mocks base method
func (m *MockIceberg) CheckDevice(ctx context.Context, req *protos.CheckRequest) (*protos.CheckReply, error) {
	ret := m.ctrl.Call(m, "CheckDevice", ctx, req)
	ret0, _ := ret[0].(*protos.CheckReply)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckDevice indicates an expected call of CheckDevice
func (mr *MockIcebergMockRecorder) CheckDevice(ctx, req interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckDevice", reflect.TypeOf((*MockIceberg)(nil).CheckDevice), ctx, req)
}

// InitDevice mocks base method
func (m *MockIceberg) InitDevice(ctx context.Context, req *protos.InitRequest) (*protos.InitReply, error) {
	ret := m.ctrl.Call(m, "InitDevice", ctx, req)
	ret0, _ := ret[0].(*protos.InitReply)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InitDevice indicates an expected call of InitDevice
func (mr *MockIcebergMockRecorder) InitDevice(ctx, req interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InitDevice", reflect.TypeOf((*MockIceberg)(nil).InitDevice), ctx, req)
}
