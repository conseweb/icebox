// Code generated by protoc-gen-go. DO NOT EDIT.
// source: icebox_simulator.proto

/*
Package protos is a generated protocol buffer package.

It is generated from these files:
	icebox_simulator.proto

It has these top-level messages:
	Timestamp
	IceboxMessage
	Error
	HelloRequest
	HelloReply
	NegotiateRequest
	NegotiateReply
	StartRequest
	StartReply
	EndRequest
	EndReply
	CheckRequest
	CheckReply
	InitRequest
	InitReply
	PingRequest
	PingReply
	AddCoinRequest
	AddCoinReply
	CreateAddressRequest
	CreateAddressReply
	CreateSecretRequest
	CreateSecretReply
	AddSecretRequest
	AddSecretReply
	SignTxRequest
	SignTxReply
	SignMsgRequest
	SignMsgReply
	ListCoinRequest
	ListCoinReply
	GetAddressRequest
	GetAddressReply
	ListAddressRequest
	Address
	ListAddressReply
	ListSecretRequest
	Secret
	ListSecretReply
	RemoveCoinRequest
	RemoveCoinReply
	DeleteSecretRequest
	DeleteSecretReply
	DeleteAddressRequest
	DeleteAddressReply
	ResetRequest
	ResetReply
	DispMsgRequest
	DispMsgReply
*/
package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type IceboxMessage_Command int32

const (
	IceboxMessage_UNDEFINED      IceboxMessage_Command = 0
	IceboxMessage_ERROR          IceboxMessage_Command = 1
	IceboxMessage_HELLO          IceboxMessage_Command = 2
	IceboxMessage_NEGOTIATE      IceboxMessage_Command = 3
	IceboxMessage_START          IceboxMessage_Command = 4
	IceboxMessage_END            IceboxMessage_Command = 5
	IceboxMessage_CHECK          IceboxMessage_Command = 6
	IceboxMessage_INIT           IceboxMessage_Command = 7
	IceboxMessage_PING           IceboxMessage_Command = 8
	IceboxMessage_RESET          IceboxMessage_Command = 9
	IceboxMessage_ADD_COIN       IceboxMessage_Command = 10
	IceboxMessage_CREATE_ADDRESS IceboxMessage_Command = 11
	IceboxMessage_CREATE_SECRET  IceboxMessage_Command = 12
	IceboxMessage_LIST_COIN      IceboxMessage_Command = 13
	IceboxMessage_LIST_ADDRESS   IceboxMessage_Command = 14
	IceboxMessage_LIST_SECRET    IceboxMessage_Command = 15
	IceboxMessage_SIGN_TX        IceboxMessage_Command = 16
	IceboxMessage_REMOVE_COIN    IceboxMessage_Command = 17
	IceboxMessage_DELETE_ADDRESS IceboxMessage_Command = 18
	IceboxMessage_DELETE_SECRET  IceboxMessage_Command = 19
	IceboxMessage_GET_ADDRESS    IceboxMessage_Command = 20
	IceboxMessage_GET_SECRET     IceboxMessage_Command = 21
	IceboxMessage_SIGN_MSG       IceboxMessage_Command = 22
	IceboxMessage_DISP_MSG       IceboxMessage_Command = 23
)

var IceboxMessage_Command_name = map[int32]string{
	0:  "UNDEFINED",
	1:  "ERROR",
	2:  "HELLO",
	3:  "NEGOTIATE",
	4:  "START",
	5:  "END",
	6:  "CHECK",
	7:  "INIT",
	8:  "PING",
	9:  "RESET",
	10: "ADD_COIN",
	11: "CREATE_ADDRESS",
	12: "CREATE_SECRET",
	13: "LIST_COIN",
	14: "LIST_ADDRESS",
	15: "LIST_SECRET",
	16: "SIGN_TX",
	17: "REMOVE_COIN",
	18: "DELETE_ADDRESS",
	19: "DELETE_SECRET",
	20: "GET_ADDRESS",
	21: "GET_SECRET",
	22: "SIGN_MSG",
	23: "DISP_MSG",
}
var IceboxMessage_Command_value = map[string]int32{
	"UNDEFINED":      0,
	"ERROR":          1,
	"HELLO":          2,
	"NEGOTIATE":      3,
	"START":          4,
	"END":            5,
	"CHECK":          6,
	"INIT":           7,
	"PING":           8,
	"RESET":          9,
	"ADD_COIN":       10,
	"CREATE_ADDRESS": 11,
	"CREATE_SECRET":  12,
	"LIST_COIN":      13,
	"LIST_ADDRESS":   14,
	"LIST_SECRET":    15,
	"SIGN_TX":        16,
	"REMOVE_COIN":    17,
	"DELETE_ADDRESS": 18,
	"DELETE_SECRET":  19,
	"GET_ADDRESS":    20,
	"GET_SECRET":     21,
	"SIGN_MSG":       22,
	"DISP_MSG":       23,
}

func (x IceboxMessage_Command) Enum() *IceboxMessage_Command {
	p := new(IceboxMessage_Command)
	*p = x
	return p
}
func (x IceboxMessage_Command) String() string {
	return proto.EnumName(IceboxMessage_Command_name, int32(x))
}
func (x *IceboxMessage_Command) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(IceboxMessage_Command_value, data, "IceboxMessage_Command")
	if err != nil {
		return err
	}
	*x = IceboxMessage_Command(value)
	return nil
}
func (IceboxMessage_Command) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type Address_HashAlgo int32

const (
	Address_RAW     Address_HashAlgo = 0
	Address_SHA256  Address_HashAlgo = 1
	Address_DSHA256 Address_HashAlgo = 2
	Address_ADDRESS Address_HashAlgo = 3
)

var Address_HashAlgo_name = map[int32]string{
	0: "RAW",
	1: "SHA256",
	2: "DSHA256",
	3: "ADDRESS",
}
var Address_HashAlgo_value = map[string]int32{
	"RAW":     0,
	"SHA256":  1,
	"DSHA256": 2,
	"ADDRESS": 3,
}

func (x Address_HashAlgo) Enum() *Address_HashAlgo {
	p := new(Address_HashAlgo)
	*p = x
	return p
}
func (x Address_HashAlgo) String() string {
	return proto.EnumName(Address_HashAlgo_name, int32(x))
}
func (x *Address_HashAlgo) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Address_HashAlgo_value, data, "Address_HashAlgo")
	if err != nil {
		return err
	}
	*x = Address_HashAlgo(value)
	return nil
}
func (Address_HashAlgo) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{34, 0} }

type Timestamp struct {
	// Represents seconds of UTC time since Unix epoch
	// 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
	// 9999-12-31T23:59:59Z inclusive.
	Seconds *int64 `protobuf:"varint,1,req,name=seconds" json:"seconds,omitempty"`
	// Non-negative fractions of a second at nanosecond resolution. Negative
	// second values with fractions must still have non-negative nanos values
	// that count forward in time. Must be from 0 to 999,999,999
	// inclusive.
	Nanos            *int32 `protobuf:"varint,2,req,name=nanos" json:"nanos,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Timestamp) Reset()                    { *m = Timestamp{} }
func (m *Timestamp) String() string            { return proto.CompactTextString(m) }
func (*Timestamp) ProtoMessage()               {}
func (*Timestamp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Timestamp) GetSeconds() int64 {
	if m != nil && m.Seconds != nil {
		return *m.Seconds
	}
	return 0
}

func (m *Timestamp) GetNanos() int32 {
	if m != nil && m.Nanos != nil {
		return *m.Nanos
	}
	return 0
}

type IceboxMessage struct {
	Header *IceboxMessage_Header `protobuf:"bytes,1,req,name=header" json:"header,omitempty"`
	// FIXME: 最大值未经验证
	Payload          []byte `protobuf:"bytes,2,req,name=payload" json:"payload,omitempty"`
	Signature        []byte `protobuf:"bytes,3,req,name=signature" json:"signature,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *IceboxMessage) Reset()                    { *m = IceboxMessage{} }
func (m *IceboxMessage) String() string            { return proto.CompactTextString(m) }
func (*IceboxMessage) ProtoMessage()               {}
func (*IceboxMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *IceboxMessage) GetHeader() *IceboxMessage_Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *IceboxMessage) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *IceboxMessage) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type IceboxMessage_Header struct {
	Version          *uint32                `protobuf:"varint,1,req,name=version,def=1" json:"version,omitempty"`
	Cmd              *IceboxMessage_Command `protobuf:"varint,2,req,name=cmd,enum=IceboxMessage_Command" json:"cmd,omitempty"`
	Timestamp        *Timestamp             `protobuf:"bytes,3,req,name=timestamp" json:"timestamp,omitempty"`
	SessionId        *uint32                `protobuf:"varint,4,req,name=session_id,json=sessionId" json:"session_id,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *IceboxMessage_Header) Reset()                    { *m = IceboxMessage_Header{} }
func (m *IceboxMessage_Header) String() string            { return proto.CompactTextString(m) }
func (*IceboxMessage_Header) ProtoMessage()               {}
func (*IceboxMessage_Header) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

const Default_IceboxMessage_Header_Version uint32 = 1

func (m *IceboxMessage_Header) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return Default_IceboxMessage_Header_Version
}

func (m *IceboxMessage_Header) GetCmd() IceboxMessage_Command {
	if m != nil && m.Cmd != nil {
		return *m.Cmd
	}
	return IceboxMessage_UNDEFINED
}

func (m *IceboxMessage_Header) GetTimestamp() *Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *IceboxMessage_Header) GetSessionId() uint32 {
	if m != nil && m.SessionId != nil {
		return *m.SessionId
	}
	return 0
}

type Error struct {
	Code             *int32  `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	Message          *string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Error) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *Error) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type HelloRequest struct {
	//    required Header header = 1;
	MagicA           *int64 `protobuf:"varint,2,req,name=magicA" json:"magicA,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *HelloRequest) Reset()                    { *m = HelloRequest{} }
func (m *HelloRequest) String() string            { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()               {}
func (*HelloRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *HelloRequest) GetMagicA() int64 {
	if m != nil && m.MagicA != nil {
		return *m.MagicA
	}
	return 0
}

type HelloReply struct {
	//    required ReplyHeader header = 1;
	MagicB           *int64 `protobuf:"varint,2,req,name=magicB" json:"magicB,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *HelloReply) Reset()                    { *m = HelloReply{} }
func (m *HelloReply) String() string            { return proto.CompactTextString(m) }
func (*HelloReply) ProtoMessage()               {}
func (*HelloReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *HelloReply) GetMagicB() int64 {
	if m != nil && m.MagicB != nil {
		return *m.MagicB
	}
	return 0
}

type NegotiateRequest struct {
	KeyA             *string `protobuf:"bytes,2,req,name=keyA" json:"keyA,omitempty"`
	Hash             *string `protobuf:"bytes,3,req,name=hash" json:"hash,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *NegotiateRequest) Reset()                    { *m = NegotiateRequest{} }
func (m *NegotiateRequest) String() string            { return proto.CompactTextString(m) }
func (*NegotiateRequest) ProtoMessage()               {}
func (*NegotiateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *NegotiateRequest) GetKeyA() string {
	if m != nil && m.KeyA != nil {
		return *m.KeyA
	}
	return ""
}

func (m *NegotiateRequest) GetHash() string {
	if m != nil && m.Hash != nil {
		return *m.Hash
	}
	return ""
}

type NegotiateReply struct {
	KeyB             *string `protobuf:"bytes,2,req,name=keyB" json:"keyB,omitempty"`
	Hash             *string `protobuf:"bytes,3,req,name=hash" json:"hash,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *NegotiateReply) Reset()                    { *m = NegotiateReply{} }
func (m *NegotiateReply) String() string            { return proto.CompactTextString(m) }
func (*NegotiateReply) ProtoMessage()               {}
func (*NegotiateReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *NegotiateReply) GetKeyB() string {
	if m != nil && m.KeyB != nil {
		return *m.KeyB
	}
	return ""
}

func (m *NegotiateReply) GetHash() string {
	if m != nil && m.Hash != nil {
		return *m.Hash
	}
	return ""
}

type StartRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *StartRequest) Reset()                    { *m = StartRequest{} }
func (m *StartRequest) String() string            { return proto.CompactTextString(m) }
func (*StartRequest) ProtoMessage()               {}
func (*StartRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type StartReply struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *StartReply) Reset()                    { *m = StartReply{} }
func (m *StartReply) String() string            { return proto.CompactTextString(m) }
func (*StartReply) ProtoMessage()               {}
func (*StartReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type EndRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *EndRequest) Reset()                    { *m = EndRequest{} }
func (m *EndRequest) String() string            { return proto.CompactTextString(m) }
func (*EndRequest) ProtoMessage()               {}
func (*EndRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type EndReply struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *EndReply) Reset()                    { *m = EndReply{} }
func (m *EndReply) String() string            { return proto.CompactTextString(m) }
func (*EndReply) ProtoMessage()               {}
func (*EndReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type CheckRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CheckRequest) Reset()                    { *m = CheckRequest{} }
func (m *CheckRequest) String() string            { return proto.CompactTextString(m) }
func (*CheckRequest) ProtoMessage()               {}
func (*CheckRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

type CheckReply struct {
	//    required ReplyHeader header = 1;
	State *int32 `protobuf:"varint,2,req,name=state" json:"state,omitempty"`
	// if paired then return dev_id=sha256(id+app_id)
	DevId            *string `protobuf:"bytes,3,opt,name=dev_id,json=devId" json:"dev_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CheckReply) Reset()                    { *m = CheckReply{} }
func (m *CheckReply) String() string            { return proto.CompactTextString(m) }
func (*CheckReply) ProtoMessage()               {}
func (*CheckReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *CheckReply) GetState() int32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *CheckReply) GetDevId() string {
	if m != nil && m.DevId != nil {
		return *m.DevId
	}
	return ""
}

type InitRequest struct {
	//    required Header header = 1;
	// 真实设备是没有这个字段的
	Password         *string `protobuf:"bytes,2,req,name=password" json:"password,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *InitRequest) Reset()                    { *m = InitRequest{} }
func (m *InitRequest) String() string            { return proto.CompactTextString(m) }
func (*InitRequest) ProtoMessage()               {}
func (*InitRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *InitRequest) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

type InitReply struct {
	//    required ReplyHeader header = 1;
	DevId            []byte `protobuf:"bytes,2,req,name=dev_id,json=devId" json:"dev_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *InitReply) Reset()                    { *m = InitReply{} }
func (m *InitReply) String() string            { return proto.CompactTextString(m) }
func (*InitReply) ProtoMessage()               {}
func (*InitReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *InitReply) GetDevId() []byte {
	if m != nil {
		return m.DevId
	}
	return nil
}

// The request message containing the user's name.
type PingRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *PingRequest) Reset()                    { *m = PingRequest{} }
func (m *PingRequest) String() string            { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()               {}
func (*PingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

// The response message containing the greetings
type PingReply struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *PingReply) Reset()                    { *m = PingReply{} }
func (m *PingReply) String() string            { return proto.CompactTextString(m) }
func (*PingReply) ProtoMessage()               {}
func (*PingReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

// if coin_type have exists in cointable, then failed
type AddCoinRequest struct {
	Type             *uint32 `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
	Idx              *uint32 `protobuf:"varint,3,req,name=idx" json:"idx,omitempty"`
	Symbol           *string `protobuf:"bytes,4,req,name=symbol" json:"symbol,omitempty"`
	Name             *string `protobuf:"bytes,5,req,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AddCoinRequest) Reset()                    { *m = AddCoinRequest{} }
func (m *AddCoinRequest) String() string            { return proto.CompactTextString(m) }
func (*AddCoinRequest) ProtoMessage()               {}
func (*AddCoinRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *AddCoinRequest) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *AddCoinRequest) GetIdx() uint32 {
	if m != nil && m.Idx != nil {
		return *m.Idx
	}
	return 0
}

func (m *AddCoinRequest) GetSymbol() string {
	if m != nil && m.Symbol != nil {
		return *m.Symbol
	}
	return ""
}

func (m *AddCoinRequest) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type AddCoinReply struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *AddCoinReply) Reset()                    { *m = AddCoinReply{} }
func (m *AddCoinReply) String() string            { return proto.CompactTextString(m) }
func (*AddCoinReply) ProtoMessage()               {}
func (*AddCoinReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

type CreateAddressRequest struct {
	Password         *string `protobuf:"bytes,1,req,name=password" json:"password,omitempty"`
	Type             *uint32 `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
	Idx              *uint32 `protobuf:"varint,3,opt,name=idx" json:"idx,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CreateAddressRequest) Reset()                    { *m = CreateAddressRequest{} }
func (m *CreateAddressRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateAddressRequest) ProtoMessage()               {}
func (*CreateAddressRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *CreateAddressRequest) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *CreateAddressRequest) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CreateAddressRequest) GetIdx() uint32 {
	if m != nil && m.Idx != nil {
		return *m.Idx
	}
	return 0
}

type CreateAddressReply struct {
	Type             *uint32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Idx              *uint32 `protobuf:"varint,2,req,name=idx" json:"idx,omitempty"`
	Address          *string `protobuf:"bytes,3,req,name=address" json:"address,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CreateAddressReply) Reset()                    { *m = CreateAddressReply{} }
func (m *CreateAddressReply) String() string            { return proto.CompactTextString(m) }
func (*CreateAddressReply) ProtoMessage()               {}
func (*CreateAddressReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *CreateAddressReply) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CreateAddressReply) GetIdx() uint32 {
	if m != nil && m.Idx != nil {
		return *m.Idx
	}
	return 0
}

func (m *CreateAddressReply) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

type CreateSecretRequest struct {
	Password         *string `protobuf:"bytes,1,req,name=password" json:"password,omitempty"`
	Type             *uint32 `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
	Site             *uint32 `protobuf:"varint,3,req,name=site" json:"site,omitempty"`
	Account          *uint32 `protobuf:"varint,4,req,name=account" json:"account,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CreateSecretRequest) Reset()                    { *m = CreateSecretRequest{} }
func (m *CreateSecretRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateSecretRequest) ProtoMessage()               {}
func (*CreateSecretRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *CreateSecretRequest) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *CreateSecretRequest) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CreateSecretRequest) GetSite() uint32 {
	if m != nil && m.Site != nil {
		return *m.Site
	}
	return 0
}

func (m *CreateSecretRequest) GetAccount() uint32 {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return 0
}

type CreateSecretReply struct {
	Type             *uint32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Site             *uint32 `protobuf:"varint,2,req,name=site" json:"site,omitempty"`
	Account          *uint32 `protobuf:"varint,3,req,name=account" json:"account,omitempty"`
	Index            *uint32 `protobuf:"varint,4,req,name=index" json:"index,omitempty"`
	Secret           []byte  `protobuf:"bytes,5,req,name=secret" json:"secret,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CreateSecretReply) Reset()                    { *m = CreateSecretReply{} }
func (m *CreateSecretReply) String() string            { return proto.CompactTextString(m) }
func (*CreateSecretReply) ProtoMessage()               {}
func (*CreateSecretReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *CreateSecretReply) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *CreateSecretReply) GetSite() uint32 {
	if m != nil && m.Site != nil {
		return *m.Site
	}
	return 0
}

func (m *CreateSecretReply) GetAccount() uint32 {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return 0
}

func (m *CreateSecretReply) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *CreateSecretReply) GetSecret() []byte {
	if m != nil {
		return m.Secret
	}
	return nil
}

// 保存用户自己的秘密
type AddSecretRequest struct {
	Password         *string `protobuf:"bytes,1,req,name=password" json:"password,omitempty"`
	Type             *uint32 `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
	Site             *uint32 `protobuf:"varint,3,req,name=site" json:"site,omitempty"`
	Account          *uint32 `protobuf:"varint,4,req,name=account" json:"account,omitempty"`
	Secret           []byte  `protobuf:"bytes,5,req,name=secret" json:"secret,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AddSecretRequest) Reset()                    { *m = AddSecretRequest{} }
func (m *AddSecretRequest) String() string            { return proto.CompactTextString(m) }
func (*AddSecretRequest) ProtoMessage()               {}
func (*AddSecretRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *AddSecretRequest) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *AddSecretRequest) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *AddSecretRequest) GetSite() uint32 {
	if m != nil && m.Site != nil {
		return *m.Site
	}
	return 0
}

func (m *AddSecretRequest) GetAccount() uint32 {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return 0
}

func (m *AddSecretRequest) GetSecret() []byte {
	if m != nil {
		return m.Secret
	}
	return nil
}

type AddSecretReply struct {
	Type             *uint32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Site             *uint32 `protobuf:"varint,2,req,name=site" json:"site,omitempty"`
	Account          *uint32 `protobuf:"varint,3,req,name=account" json:"account,omitempty"`
	Idx              *uint32 `protobuf:"varint,4,req,name=idx" json:"idx,omitempty"`
	Secret           []byte  `protobuf:"bytes,5,req,name=secret" json:"secret,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AddSecretReply) Reset()                    { *m = AddSecretReply{} }
func (m *AddSecretReply) String() string            { return proto.CompactTextString(m) }
func (*AddSecretReply) ProtoMessage()               {}
func (*AddSecretReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *AddSecretReply) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *AddSecretReply) GetSite() uint32 {
	if m != nil && m.Site != nil {
		return *m.Site
	}
	return 0
}

func (m *AddSecretReply) GetAccount() uint32 {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return 0
}

func (m *AddSecretReply) GetIdx() uint32 {
	if m != nil && m.Idx != nil {
		return *m.Idx
	}
	return 0
}

func (m *AddSecretReply) GetSecret() []byte {
	if m != nil {
		return m.Secret
	}
	return nil
}

type SignTxRequest struct {
	Password *string `protobuf:"bytes,1,req,name=password" json:"password,omitempty"`
	Type     *uint32 `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
	Idx      *uint32 `protobuf:"varint,3,req,name=idx" json:"idx,omitempty"`
	Amount   *uint64 `protobuf:"varint,4,req,name=amount" json:"amount,omitempty"`
	// FIXME: 该最大值未经验证
	Dest *string `protobuf:"bytes,5,req,name=dest" json:"dest,omitempty"`
	// FIXME: 该最大值未经验证
	TxHash           []byte  `protobuf:"bytes,6,req,name=tx_hash,json=txHash" json:"tx_hash,omitempty"`
	TxIdx            *uint32 `protobuf:"varint,7,req,name=tx_idx,json=txIdx" json:"tx_idx,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SignTxRequest) Reset()                    { *m = SignTxRequest{} }
func (m *SignTxRequest) String() string            { return proto.CompactTextString(m) }
func (*SignTxRequest) ProtoMessage()               {}
func (*SignTxRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *SignTxRequest) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *SignTxRequest) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *SignTxRequest) GetIdx() uint32 {
	if m != nil && m.Idx != nil {
		return *m.Idx
	}
	return 0
}

func (m *SignTxRequest) GetAmount() uint64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *SignTxRequest) GetDest() string {
	if m != nil && m.Dest != nil {
		return *m.Dest
	}
	return ""
}

func (m *SignTxRequest) GetTxHash() []byte {
	if m != nil {
		return m.TxHash
	}
	return nil
}

func (m *SignTxRequest) GetTxIdx() uint32 {
	if m != nil && m.TxIdx != nil {
		return *m.TxIdx
	}
	return 0
}

type SignTxReply struct {
	// TODO: 该最大值未经验证
	SignedTx         []byte `protobuf:"bytes,2,req,name=signedTx" json:"signedTx,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SignTxReply) Reset()                    { *m = SignTxReply{} }
func (m *SignTxReply) String() string            { return proto.CompactTextString(m) }
func (*SignTxReply) ProtoMessage()               {}
func (*SignTxReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *SignTxReply) GetSignedTx() []byte {
	if m != nil {
		return m.SignedTx
	}
	return nil
}

type SignMsgRequest struct {
	Password *string `protobuf:"bytes,1,req,name=password" json:"password,omitempty"`
	Type     *uint32 `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
	Idx      *uint32 `protobuf:"varint,3,req,name=idx" json:"idx,omitempty"`
	// FIXME: 最大值未经验证
	Message          []byte `protobuf:"bytes,4,req,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SignMsgRequest) Reset()                    { *m = SignMsgRequest{} }
func (m *SignMsgRequest) String() string            { return proto.CompactTextString(m) }
func (*SignMsgRequest) ProtoMessage()               {}
func (*SignMsgRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *SignMsgRequest) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *SignMsgRequest) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *SignMsgRequest) GetIdx() uint32 {
	if m != nil && m.Idx != nil {
		return *m.Idx
	}
	return 0
}

func (m *SignMsgRequest) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

type SignMsgReply struct {
	// FIXME: 最大值未经验证
	Signed           []byte `protobuf:"bytes,1,req,name=signed" json:"signed,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SignMsgReply) Reset()                    { *m = SignMsgReply{} }
func (m *SignMsgReply) String() string            { return proto.CompactTextString(m) }
func (*SignMsgReply) ProtoMessage()               {}
func (*SignMsgReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *SignMsgReply) GetSigned() []byte {
	if m != nil {
		return m.Signed
	}
	return nil
}

// list all of wallets
type ListCoinRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ListCoinRequest) Reset()                    { *m = ListCoinRequest{} }
func (m *ListCoinRequest) String() string            { return proto.CompactTextString(m) }
func (*ListCoinRequest) ProtoMessage()               {}
func (*ListCoinRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

type ListCoinReply struct {
	Max              *uint32  `protobuf:"varint,2,req,name=max" json:"max,omitempty"`
	Type             []uint32 `protobuf:"varint,3,rep,name=type" json:"type,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ListCoinReply) Reset()                    { *m = ListCoinReply{} }
func (m *ListCoinReply) String() string            { return proto.CompactTextString(m) }
func (*ListCoinReply) ProtoMessage()               {}
func (*ListCoinReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *ListCoinReply) GetMax() uint32 {
	if m != nil && m.Max != nil {
		return *m.Max
	}
	return 0
}

func (m *ListCoinReply) GetType() []uint32 {
	if m != nil {
		return m.Type
	}
	return nil
}

// 查询单条记录
type GetAddressRequest struct {
	Password         *string `protobuf:"bytes,1,req,name=password" json:"password,omitempty"`
	Type             *uint32 `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
	Idx              *uint32 `protobuf:"varint,3,req,name=idx" json:"idx,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetAddressRequest) Reset()                    { *m = GetAddressRequest{} }
func (m *GetAddressRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAddressRequest) ProtoMessage()               {}
func (*GetAddressRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *GetAddressRequest) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *GetAddressRequest) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *GetAddressRequest) GetIdx() uint32 {
	if m != nil && m.Idx != nil {
		return *m.Idx
	}
	return 0
}

type GetAddressReply struct {
	Addr             *Address `protobuf:"bytes,1,req,name=addr" json:"addr,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *GetAddressReply) Reset()                    { *m = GetAddressReply{} }
func (m *GetAddressReply) String() string            { return proto.CompactTextString(m) }
func (*GetAddressReply) ProtoMessage()               {}
func (*GetAddressReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *GetAddressReply) GetAddr() *Address {
	if m != nil {
		return m.Addr
	}
	return nil
}

type ListAddressRequest struct {
	Password         *string `protobuf:"bytes,1,req,name=password" json:"password,omitempty"`
	Type             *uint32 `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
	Offset           *uint32 `protobuf:"varint,3,req,name=offset" json:"offset,omitempty"`
	Limit            *uint32 `protobuf:"varint,4,req,name=limit" json:"limit,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ListAddressRequest) Reset()                    { *m = ListAddressRequest{} }
func (m *ListAddressRequest) String() string            { return proto.CompactTextString(m) }
func (*ListAddressRequest) ProtoMessage()               {}
func (*ListAddressRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *ListAddressRequest) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *ListAddressRequest) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *ListAddressRequest) GetOffset() uint32 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *ListAddressRequest) GetLimit() uint32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

type Address struct {
	Type             *uint32           `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Idx              *uint32           `protobuf:"varint,2,req,name=idx" json:"idx,omitempty"`
	Name             *string           `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Algo             *Address_HashAlgo `protobuf:"varint,4,req,name=algo,enum=Address_HashAlgo,def=0" json:"algo,omitempty"`
	SAddr            *string           `protobuf:"bytes,5,req,name=s_addr,json=sAddr" json:"s_addr,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *Address) Reset()                    { *m = Address{} }
func (m *Address) String() string            { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()               {}
func (*Address) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

const Default_Address_Algo Address_HashAlgo = Address_RAW

func (m *Address) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *Address) GetIdx() uint32 {
	if m != nil && m.Idx != nil {
		return *m.Idx
	}
	return 0
}

func (m *Address) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Address) GetAlgo() Address_HashAlgo {
	if m != nil && m.Algo != nil {
		return *m.Algo
	}
	return Default_Address_Algo
}

func (m *Address) GetSAddr() string {
	if m != nil && m.SAddr != nil {
		return *m.SAddr
	}
	return ""
}

type ListAddressReply struct {
	TotalRecords     *uint32    `protobuf:"varint,1,req,name=total_records,json=totalRecords" json:"total_records,omitempty"`
	TotalPages       *uint32    `protobuf:"varint,2,req,name=total_pages,json=totalPages" json:"total_pages,omitempty"`
	Limit            *uint32    `protobuf:"varint,3,req,name=limit" json:"limit,omitempty"`
	Offset           *uint32    `protobuf:"varint,4,req,name=offset" json:"offset,omitempty"`
	Addr             []*Address `protobuf:"bytes,5,rep,name=addr" json:"addr,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *ListAddressReply) Reset()                    { *m = ListAddressReply{} }
func (m *ListAddressReply) String() string            { return proto.CompactTextString(m) }
func (*ListAddressReply) ProtoMessage()               {}
func (*ListAddressReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *ListAddressReply) GetTotalRecords() uint32 {
	if m != nil && m.TotalRecords != nil {
		return *m.TotalRecords
	}
	return 0
}

func (m *ListAddressReply) GetTotalPages() uint32 {
	if m != nil && m.TotalPages != nil {
		return *m.TotalPages
	}
	return 0
}

func (m *ListAddressReply) GetLimit() uint32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *ListAddressReply) GetOffset() uint32 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *ListAddressReply) GetAddr() []*Address {
	if m != nil {
		return m.Addr
	}
	return nil
}

type ListSecretRequest struct {
	Password         *string `protobuf:"bytes,1,req,name=password" json:"password,omitempty"`
	Type             *uint32 `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
	Site             *uint32 `protobuf:"varint,3,opt,name=site" json:"site,omitempty"`
	Account          *uint32 `protobuf:"varint,4,opt,name=account" json:"account,omitempty"`
	Offset           *uint32 `protobuf:"varint,5,req,name=offset" json:"offset,omitempty"`
	Limit            *uint32 `protobuf:"varint,6,req,name=limit" json:"limit,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ListSecretRequest) Reset()                    { *m = ListSecretRequest{} }
func (m *ListSecretRequest) String() string            { return proto.CompactTextString(m) }
func (*ListSecretRequest) ProtoMessage()               {}
func (*ListSecretRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *ListSecretRequest) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *ListSecretRequest) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *ListSecretRequest) GetSite() uint32 {
	if m != nil && m.Site != nil {
		return *m.Site
	}
	return 0
}

func (m *ListSecretRequest) GetAccount() uint32 {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return 0
}

func (m *ListSecretRequest) GetOffset() uint32 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *ListSecretRequest) GetLimit() uint32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

type Secret struct {
	Type             *uint32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Site             *uint32 `protobuf:"varint,2,req,name=site" json:"site,omitempty"`
	Account          *uint32 `protobuf:"varint,3,req,name=account" json:"account,omitempty"`
	Idx              *uint32 `protobuf:"varint,4,req,name=idx" json:"idx,omitempty"`
	SSecret          []byte  `protobuf:"bytes,5,req,name=s_secret,json=sSecret" json:"s_secret,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Secret) Reset()                    { *m = Secret{} }
func (m *Secret) String() string            { return proto.CompactTextString(m) }
func (*Secret) ProtoMessage()               {}
func (*Secret) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *Secret) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *Secret) GetSite() uint32 {
	if m != nil && m.Site != nil {
		return *m.Site
	}
	return 0
}

func (m *Secret) GetAccount() uint32 {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return 0
}

func (m *Secret) GetIdx() uint32 {
	if m != nil && m.Idx != nil {
		return *m.Idx
	}
	return 0
}

func (m *Secret) GetSSecret() []byte {
	if m != nil {
		return m.SSecret
	}
	return nil
}

type ListSecretReply struct {
	TotalRecords     *uint32   `protobuf:"varint,1,req,name=total_records,json=totalRecords" json:"total_records,omitempty"`
	TotalPages       *uint32   `protobuf:"varint,2,req,name=total_pages,json=totalPages" json:"total_pages,omitempty"`
	Limit            *uint32   `protobuf:"varint,3,req,name=limit" json:"limit,omitempty"`
	Offset           *uint32   `protobuf:"varint,4,req,name=offset" json:"offset,omitempty"`
	Secret           []*Secret `protobuf:"bytes,5,rep,name=secret" json:"secret,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *ListSecretReply) Reset()                    { *m = ListSecretReply{} }
func (m *ListSecretReply) String() string            { return proto.CompactTextString(m) }
func (*ListSecretReply) ProtoMessage()               {}
func (*ListSecretReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *ListSecretReply) GetTotalRecords() uint32 {
	if m != nil && m.TotalRecords != nil {
		return *m.TotalRecords
	}
	return 0
}

func (m *ListSecretReply) GetTotalPages() uint32 {
	if m != nil && m.TotalPages != nil {
		return *m.TotalPages
	}
	return 0
}

func (m *ListSecretReply) GetLimit() uint32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *ListSecretReply) GetOffset() uint32 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *ListSecretReply) GetSecret() []*Secret {
	if m != nil {
		return m.Secret
	}
	return nil
}

type RemoveCoinRequest struct {
	Password         *string `protobuf:"bytes,1,req,name=password" json:"password,omitempty"`
	Type             *uint32 `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RemoveCoinRequest) Reset()                    { *m = RemoveCoinRequest{} }
func (m *RemoveCoinRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoveCoinRequest) ProtoMessage()               {}
func (*RemoveCoinRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *RemoveCoinRequest) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *RemoveCoinRequest) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

type RemoveCoinReply struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RemoveCoinReply) Reset()                    { *m = RemoveCoinReply{} }
func (m *RemoveCoinReply) String() string            { return proto.CompactTextString(m) }
func (*RemoveCoinReply) ProtoMessage()               {}
func (*RemoveCoinReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

type DeleteSecretRequest struct {
	Password         *string `protobuf:"bytes,1,req,name=password" json:"password,omitempty"`
	Type             *uint32 `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
	Idx              *uint32 `protobuf:"varint,3,req,name=idx" json:"idx,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DeleteSecretRequest) Reset()                    { *m = DeleteSecretRequest{} }
func (m *DeleteSecretRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteSecretRequest) ProtoMessage()               {}
func (*DeleteSecretRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *DeleteSecretRequest) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *DeleteSecretRequest) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *DeleteSecretRequest) GetIdx() uint32 {
	if m != nil && m.Idx != nil {
		return *m.Idx
	}
	return 0
}

type DeleteSecretReply struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *DeleteSecretReply) Reset()                    { *m = DeleteSecretReply{} }
func (m *DeleteSecretReply) String() string            { return proto.CompactTextString(m) }
func (*DeleteSecretReply) ProtoMessage()               {}
func (*DeleteSecretReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

type DeleteAddressRequest struct {
	Password         *string `protobuf:"bytes,1,req,name=password" json:"password,omitempty"`
	Type             *uint32 `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
	Idx              *uint32 `protobuf:"varint,3,req,name=idx" json:"idx,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DeleteAddressRequest) Reset()                    { *m = DeleteAddressRequest{} }
func (m *DeleteAddressRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteAddressRequest) ProtoMessage()               {}
func (*DeleteAddressRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *DeleteAddressRequest) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *DeleteAddressRequest) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *DeleteAddressRequest) GetIdx() uint32 {
	if m != nil && m.Idx != nil {
		return *m.Idx
	}
	return 0
}

type DeleteAddressReply struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *DeleteAddressReply) Reset()                    { *m = DeleteAddressReply{} }
func (m *DeleteAddressReply) String() string            { return proto.CompactTextString(m) }
func (*DeleteAddressReply) ProtoMessage()               {}
func (*DeleteAddressReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

type ResetRequest struct {
	Password         *string `protobuf:"bytes,1,req,name=password" json:"password,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ResetRequest) Reset()                    { *m = ResetRequest{} }
func (m *ResetRequest) String() string            { return proto.CompactTextString(m) }
func (*ResetRequest) ProtoMessage()               {}
func (*ResetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *ResetRequest) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

type ResetReply struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ResetReply) Reset()                    { *m = ResetReply{} }
func (m *ResetReply) String() string            { return proto.CompactTextString(m) }
func (*ResetReply) ProtoMessage()               {}
func (*ResetReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

type DispMsgRequest struct {
	// FIXME: 最大值未经验证
	Title            []byte `protobuf:"bytes,1,req,name=title" json:"title,omitempty"`
	Content          []byte `protobuf:"bytes,2,req,name=content" json:"content,omitempty"`
	Icon             []byte `protobuf:"bytes,3,req,name=icon" json:"icon,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DispMsgRequest) Reset()                    { *m = DispMsgRequest{} }
func (m *DispMsgRequest) String() string            { return proto.CompactTextString(m) }
func (*DispMsgRequest) ProtoMessage()               {}
func (*DispMsgRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *DispMsgRequest) GetTitle() []byte {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *DispMsgRequest) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *DispMsgRequest) GetIcon() []byte {
	if m != nil {
		return m.Icon
	}
	return nil
}

type DispMsgReply struct {
	Result           *bool  `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DispMsgReply) Reset()                    { *m = DispMsgReply{} }
func (m *DispMsgReply) String() string            { return proto.CompactTextString(m) }
func (*DispMsgReply) ProtoMessage()               {}
func (*DispMsgReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *DispMsgReply) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func init() {
	proto.RegisterType((*Timestamp)(nil), "Timestamp")
	proto.RegisterType((*IceboxMessage)(nil), "IceboxMessage")
	proto.RegisterType((*IceboxMessage_Header)(nil), "IceboxMessage.Header")
	proto.RegisterType((*Error)(nil), "Error")
	proto.RegisterType((*HelloRequest)(nil), "HelloRequest")
	proto.RegisterType((*HelloReply)(nil), "HelloReply")
	proto.RegisterType((*NegotiateRequest)(nil), "NegotiateRequest")
	proto.RegisterType((*NegotiateReply)(nil), "NegotiateReply")
	proto.RegisterType((*StartRequest)(nil), "StartRequest")
	proto.RegisterType((*StartReply)(nil), "StartReply")
	proto.RegisterType((*EndRequest)(nil), "EndRequest")
	proto.RegisterType((*EndReply)(nil), "EndReply")
	proto.RegisterType((*CheckRequest)(nil), "CheckRequest")
	proto.RegisterType((*CheckReply)(nil), "CheckReply")
	proto.RegisterType((*InitRequest)(nil), "InitRequest")
	proto.RegisterType((*InitReply)(nil), "InitReply")
	proto.RegisterType((*PingRequest)(nil), "PingRequest")
	proto.RegisterType((*PingReply)(nil), "PingReply")
	proto.RegisterType((*AddCoinRequest)(nil), "AddCoinRequest")
	proto.RegisterType((*AddCoinReply)(nil), "AddCoinReply")
	proto.RegisterType((*CreateAddressRequest)(nil), "CreateAddressRequest")
	proto.RegisterType((*CreateAddressReply)(nil), "CreateAddressReply")
	proto.RegisterType((*CreateSecretRequest)(nil), "CreateSecretRequest")
	proto.RegisterType((*CreateSecretReply)(nil), "CreateSecretReply")
	proto.RegisterType((*AddSecretRequest)(nil), "AddSecretRequest")
	proto.RegisterType((*AddSecretReply)(nil), "AddSecretReply")
	proto.RegisterType((*SignTxRequest)(nil), "SignTxRequest")
	proto.RegisterType((*SignTxReply)(nil), "SignTxReply")
	proto.RegisterType((*SignMsgRequest)(nil), "SignMsgRequest")
	proto.RegisterType((*SignMsgReply)(nil), "SignMsgReply")
	proto.RegisterType((*ListCoinRequest)(nil), "ListCoinRequest")
	proto.RegisterType((*ListCoinReply)(nil), "ListCoinReply")
	proto.RegisterType((*GetAddressRequest)(nil), "GetAddressRequest")
	proto.RegisterType((*GetAddressReply)(nil), "GetAddressReply")
	proto.RegisterType((*ListAddressRequest)(nil), "ListAddressRequest")
	proto.RegisterType((*Address)(nil), "Address")
	proto.RegisterType((*ListAddressReply)(nil), "ListAddressReply")
	proto.RegisterType((*ListSecretRequest)(nil), "ListSecretRequest")
	proto.RegisterType((*Secret)(nil), "Secret")
	proto.RegisterType((*ListSecretReply)(nil), "ListSecretReply")
	proto.RegisterType((*RemoveCoinRequest)(nil), "RemoveCoinRequest")
	proto.RegisterType((*RemoveCoinReply)(nil), "RemoveCoinReply")
	proto.RegisterType((*DeleteSecretRequest)(nil), "DeleteSecretRequest")
	proto.RegisterType((*DeleteSecretReply)(nil), "DeleteSecretReply")
	proto.RegisterType((*DeleteAddressRequest)(nil), "DeleteAddressRequest")
	proto.RegisterType((*DeleteAddressReply)(nil), "DeleteAddressReply")
	proto.RegisterType((*ResetRequest)(nil), "ResetRequest")
	proto.RegisterType((*ResetReply)(nil), "ResetReply")
	proto.RegisterType((*DispMsgRequest)(nil), "DispMsgRequest")
	proto.RegisterType((*DispMsgReply)(nil), "DispMsgReply")
	proto.RegisterEnum("IceboxMessage_Command", IceboxMessage_Command_name, IceboxMessage_Command_value)
	proto.RegisterEnum("Address_HashAlgo", Address_HashAlgo_name, Address_HashAlgo_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Icebox service

type IceboxClient interface {
	// 会话需要加密
	Execute(ctx context.Context, in *IceboxMessage, opts ...grpc.CallOption) (*IceboxMessage, error)
}

type iceboxClient struct {
	cc *grpc.ClientConn
}

func NewIceboxClient(cc *grpc.ClientConn) IceboxClient {
	return &iceboxClient{cc}
}

func (c *iceboxClient) Execute(ctx context.Context, in *IceboxMessage, opts ...grpc.CallOption) (*IceboxMessage, error) {
	out := new(IceboxMessage)
	err := grpc.Invoke(ctx, "/Icebox/Execute", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Icebox service

type IceboxServer interface {
	// 会话需要加密
	Execute(context.Context, *IceboxMessage) (*IceboxMessage, error)
}

func RegisterIceboxServer(s *grpc.Server, srv IceboxServer) {
	s.RegisterService(&_Icebox_serviceDesc, srv)
}

func _Icebox_Execute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IceboxMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IceboxServer).Execute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Icebox/Execute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IceboxServer).Execute(ctx, req.(*IceboxMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Icebox_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Icebox",
	HandlerType: (*IceboxServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Execute",
			Handler:    _Icebox_Execute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "icebox_simulator.proto",
}

func init() { proto.RegisterFile("icebox_simulator.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1566 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x58, 0x5f, 0x6f, 0x1b, 0x4b,
	0x15, 0xef, 0x7a, 0xbd, 0xfe, 0x73, 0xfc, 0x27, 0xeb, 0x49, 0x1a, 0x42, 0x2e, 0x97, 0x6b, 0xf6,
	0x5e, 0x5d, 0x85, 0xa2, 0x06, 0x35, 0x52, 0x11, 0x2d, 0x42, 0xad, 0x63, 0x6f, 0x13, 0x8b, 0xc4,
	0x89, 0xc6, 0x2e, 0xad, 0xe0, 0xc1, 0xda, 0x78, 0xa7, 0xce, 0x52, 0x7b, 0xd7, 0xec, 0x4c, 0x82,
	0xc3, 0x03, 0x42, 0xe2, 0x05, 0xf1, 0xd8, 0x07, 0xc4, 0x1b, 0x1f, 0x00, 0xf1, 0x09, 0xf8, 0x02,
	0x7c, 0x10, 0x3e, 0x08, 0x3a, 0xf3, 0xc7, 0x5e, 0x9b, 0x40, 0x5b, 0xa5, 0xc0, 0xdb, 0x9c, 0xdf,
	0xcc, 0x39, 0xbf, 0x73, 0xce, 0x9c, 0x3d, 0x73, 0x6c, 0xd8, 0x8e, 0x46, 0xec, 0x22, 0x99, 0x0f,
	0x79, 0x34, 0xbd, 0x9a, 0x04, 0x22, 0x49, 0xf7, 0x67, 0x69, 0x22, 0x92, 0xdd, 0x6a, 0x1c, 0xc4,
	0xc9, 0xec, 0x42, 0x49, 0xde, 0x8f, 0xa0, 0x3c, 0x88, 0xa6, 0x8c, 0x8b, 0x60, 0x3a, 0x23, 0x3b,
	0x50, 0xe4, 0x6c, 0x94, 0xc4, 0x21, 0xdf, 0xb1, 0x9a, 0xb9, 0x3d, 0x9b, 0x1a, 0x91, 0x6c, 0x81,
	0x83, 0x6a, 0x7c, 0x27, 0xd7, 0xcc, 0xed, 0x39, 0x54, 0x09, 0xde, 0xef, 0x1d, 0xa8, 0x75, 0x25,
	0xcb, 0x29, 0xe3, 0x3c, 0x18, 0x33, 0xf2, 0x10, 0x0a, 0x97, 0x2c, 0x08, 0x59, 0x2a, 0x0d, 0x54,
	0x0e, 0xee, 0xef, 0xaf, 0xec, 0xef, 0x1f, 0xcb, 0x4d, 0xaa, 0x0f, 0x91, 0x26, 0x14, 0x67, 0xc1,
	0xcd, 0x24, 0x09, 0x42, 0x69, 0xb8, 0x7a, 0x58, 0x78, 0xf7, 0xcc, 0x2e, 0xfd, 0x36, 0x4f, 0x0d,
	0x4c, 0xbe, 0x82, 0x32, 0x8f, 0xc6, 0x71, 0x20, 0xae, 0x52, 0xb6, 0x63, 0x67, 0xce, 0xe4, 0xe8,
	0x72, 0x63, 0xf7, 0x4f, 0x16, 0x14, 0x94, 0x69, 0xf2, 0x19, 0x14, 0xaf, 0x59, 0xca, 0xa3, 0x24,
	0x96, 0x2e, 0xd4, 0x9e, 0x5a, 0x8f, 0xa8, 0x41, 0xc8, 0x1e, 0xd8, 0xa3, 0xa9, 0xe2, 0xaa, 0x1f,
	0x6c, 0xaf, 0xf9, 0xd6, 0x4e, 0xa6, 0xd3, 0x20, 0x0e, 0x29, 0x1e, 0x21, 0x7b, 0x50, 0x16, 0x26,
	0x2f, 0x92, 0xb7, 0x72, 0x00, 0xfb, 0x8b, 0x4c, 0xd1, 0xe5, 0x26, 0xf9, 0x1c, 0x80, 0x33, 0x8e,
	0xe6, 0x87, 0x51, 0xb8, 0x93, 0x47, 0x4e, 0x5a, 0xd6, 0x48, 0x37, 0xf4, 0xfe, 0x91, 0x83, 0xa2,
	0xb6, 0x4c, 0x6a, 0x50, 0x7e, 0xd9, 0xeb, 0xf8, 0x2f, 0xba, 0x3d, 0xbf, 0xe3, 0xde, 0x23, 0x65,
	0x70, 0x7c, 0x4a, 0xcf, 0xa8, 0x6b, 0xe1, 0xf2, 0xd8, 0x3f, 0x39, 0x39, 0x73, 0x73, 0x78, 0xa8,
	0xe7, 0x1f, 0x9d, 0x0d, 0xba, 0xad, 0x81, 0xef, 0xda, 0xb8, 0xd3, 0x1f, 0xb4, 0xe8, 0xc0, 0xcd,
	0x93, 0x22, 0xd8, 0x7e, 0xaf, 0xe3, 0x3a, 0x88, 0xb5, 0x8f, 0xfd, 0xf6, 0x4f, 0xdc, 0x02, 0x29,
	0x41, 0xbe, 0xdb, 0xeb, 0x0e, 0xdc, 0x22, 0xae, 0xce, 0xbb, 0xbd, 0x23, 0xb7, 0x84, 0xdb, 0xd4,
	0xef, 0xfb, 0x03, 0xb7, 0x4c, 0xaa, 0x50, 0x6a, 0x75, 0x3a, 0xc3, 0xf6, 0x59, 0xb7, 0xe7, 0x02,
	0x21, 0x50, 0x6f, 0x53, 0xbf, 0x35, 0xf0, 0x87, 0xad, 0x4e, 0x87, 0xfa, 0xfd, 0xbe, 0x5b, 0x21,
	0x0d, 0xa8, 0x69, 0xac, 0xef, 0xb7, 0xa9, 0x3f, 0x70, 0xab, 0xe8, 0xc1, 0x49, 0xb7, 0x3f, 0x50,
	0x5a, 0x35, 0xe2, 0x42, 0x55, 0x8a, 0x46, 0xa7, 0x4e, 0x36, 0xa0, 0x22, 0x11, 0xad, 0xb1, 0x41,
	0x2a, 0x50, 0xec, 0x77, 0x8f, 0x7a, 0xc3, 0xc1, 0x6b, 0xd7, 0xc5, 0x5d, 0xea, 0x9f, 0x9e, 0xfd,
	0xd4, 0x57, 0x06, 0x1a, 0x48, 0xdb, 0xf1, 0x4f, 0xfc, 0x0c, 0x2d, 0x41, 0x5a, 0x8d, 0x69, 0x23,
	0x9b, 0xa8, 0x77, 0xe4, 0x2f, 0x69, 0xb6, 0x48, 0x1d, 0x00, 0x01, 0x7d, 0xe0, 0x3e, 0x06, 0x23,
	0x59, 0x4e, 0xfb, 0x47, 0xee, 0x36, 0x4a, 0x9d, 0x6e, 0xff, 0x5c, 0x4a, 0xdf, 0xf0, 0x7e, 0x0c,
	0x8e, 0x9f, 0xa6, 0x49, 0x4a, 0x08, 0xe4, 0x47, 0x49, 0xc8, 0xe4, 0xe5, 0x3b, 0x54, 0xae, 0xb1,
	0xcc, 0xa6, 0xea, 0x92, 0x77, 0x72, 0x4d, 0x6b, 0xaf, 0xbc, 0x28, 0x21, 0x03, 0x7b, 0x5f, 0x43,
	0xf5, 0x98, 0x4d, 0x26, 0x09, 0x65, 0xbf, 0xbc, 0x62, 0x5c, 0x90, 0x6d, 0x28, 0x4c, 0x83, 0x71,
	0x34, 0x6a, 0xc9, 0x5a, 0xb1, 0xa9, 0x96, 0xbc, 0xaf, 0x00, 0xf4, 0xb9, 0xd9, 0xe4, 0x66, 0x71,
	0xea, 0x70, 0xe5, 0xd4, 0xa1, 0xf7, 0x14, 0xdc, 0x1e, 0x1b, 0x27, 0x22, 0x0a, 0x04, 0x33, 0x16,
	0x09, 0xe4, 0xdf, 0xb2, 0x1b, 0x65, 0xaf, 0x4c, 0xe5, 0x1a, 0xb1, 0xcb, 0x80, 0x5f, 0xca, 0xfa,
	0x2a, 0x53, 0xb9, 0xf6, 0x7e, 0x08, 0xf5, 0x8c, 0x2e, 0xb2, 0x28, 0xcd, 0xc3, 0x8c, 0xe6, 0xe1,
	0xad, 0x9a, 0x75, 0xa8, 0xf6, 0x45, 0x90, 0x0a, 0xcd, 0xe8, 0x55, 0x01, 0xb4, 0x3c, 0x9b, 0xdc,
	0xa0, 0xe4, 0xc7, 0xa1, 0xd9, 0x03, 0x28, 0x49, 0x09, 0x77, 0xea, 0x50, 0x6d, 0x5f, 0xb2, 0xd1,
	0x5b, 0xb3, 0xf7, 0x04, 0x40, 0xcb, 0xc8, 0xbe, 0x05, 0x0e, 0x17, 0x81, 0x60, 0xe6, 0xcb, 0x97,
	0x02, 0xb9, 0x0f, 0x85, 0x90, 0x5d, 0x63, 0xc1, 0xdb, 0x98, 0x50, 0xea, 0x84, 0xec, 0xba, 0x1b,
	0x7a, 0x8f, 0xa0, 0xd2, 0x8d, 0x23, 0xe3, 0x01, 0xf1, 0xa0, 0x34, 0x0b, 0x38, 0xff, 0x55, 0x92,
	0xaa, 0x6f, 0xce, 0x24, 0xde, 0xa2, 0x0b, 0xdc, 0xfb, 0x2e, 0x94, 0x95, 0x0a, 0x92, 0x7d, 0x6b,
	0x61, 0x56, 0xb5, 0x03, 0xe7, 0xdd, 0xb3, 0x5c, 0xa9, 0x69, 0xac, 0xd7, 0xa0, 0x72, 0x1e, 0xc5,
	0x63, 0xe3, 0x67, 0x05, 0xca, 0x4a, 0xc4, 0x20, 0x2e, 0xa0, 0xde, 0x0a, 0xc3, 0x76, 0x12, 0xc5,
	0x99, 0x84, 0x8b, 0x9b, 0x99, 0xf2, 0xbb, 0x46, 0xe5, 0x9a, 0xb8, 0x60, 0x47, 0xe1, 0x5c, 0x66,
	0xad, 0x46, 0x71, 0x89, 0x57, 0xc8, 0x6f, 0xa6, 0x17, 0xc9, 0x44, 0x7e, 0xb9, 0x65, 0xaa, 0x25,
	0xd4, 0x8e, 0x83, 0x29, 0xdb, 0x71, 0x54, 0x82, 0x71, 0x8d, 0x89, 0x5a, 0x70, 0x20, 0xe7, 0x10,
	0xb6, 0xda, 0x29, 0x0b, 0x04, 0x6b, 0x85, 0x61, 0xca, 0x38, 0x37, 0xcc, 0xdf, 0xc9, 0x84, 0x6d,
	0xc9, 0xb0, 0x65, 0x1c, 0xcf, 0x97, 0x51, 0xff, 0x67, 0xe7, 0x2c, 0xed, 0x9c, 0xf7, 0x73, 0x20,
	0x6b, 0x04, 0xba, 0x1e, 0xa4, 0xae, 0xf5, 0xaf, 0xba, 0xb9, 0x65, 0x60, 0x5f, 0x40, 0x31, 0x50,
	0x5a, 0xaa, 0x48, 0x94, 0x0f, 0x1e, 0x35, 0xa8, 0xf7, 0x6b, 0xd8, 0x54, 0xc6, 0xfb, 0x6c, 0x94,
	0x32, 0x71, 0x47, 0xe7, 0x09, 0xe4, 0x79, 0x24, 0x98, 0x4e, 0xad, 0x5c, 0xe3, 0x73, 0x12, 0x8c,
	0x46, 0xc9, 0x55, 0x2c, 0x74, 0x5b, 0x34, 0xa2, 0xf7, 0x07, 0x0b, 0x1a, 0xab, 0xe4, 0xff, 0x2e,
	0x30, 0x63, 0x37, 0x77, 0xbb, 0x5d, 0x7b, 0xc5, 0x2e, 0x16, 0x6b, 0x14, 0x87, 0x6c, 0xae, 0xf9,
	0x94, 0x40, 0x3e, 0x87, 0x02, 0x97, 0x34, 0xf2, 0x36, 0xab, 0x26, 0x20, 0x0d, 0x7a, 0x7f, 0xb4,
	0xc0, 0x6d, 0x85, 0xe1, 0xff, 0x3e, 0x0d, 0xef, 0x73, 0xec, 0x77, 0x96, 0x2c, 0xea, 0x4f, 0x9b,
	0x22, 0x5d, 0x29, 0xf9, 0x65, 0xa5, 0xbc, 0xc7, 0x8b, 0xbf, 0x59, 0x50, 0xeb, 0x47, 0xe3, 0x78,
	0x30, 0x37, 0xb9, 0xd9, 0x5d, 0xcf, 0xcd, 0x87, 0x16, 0x76, 0xf6, 0xab, 0x0b, 0xa6, 0x8b, 0x8c,
	0xe4, 0xa9, 0x96, 0xc8, 0x37, 0x21, 0x1f, 0x32, 0xae, 0x1c, 0x59, 0x54, 0xac, 0x84, 0xc8, 0xb7,
	0xa1, 0x28, 0xe6, 0x43, 0xd9, 0xf4, 0x0a, 0xd9, 0xde, 0x50, 0x10, 0xf3, 0xe3, 0x80, 0x5f, 0x62,
	0x47, 0x12, 0xf3, 0x21, 0xf2, 0x14, 0xd5, 0xdd, 0x8b, 0x79, 0x37, 0x9c, 0x63, 0x47, 0x32, 0xce,
	0x63, 0xfe, 0x3c, 0x28, 0xe1, 0xd4, 0xc0, 0xc2, 0xc1, 0x7c, 0x6d, 0xe2, 0x58, 0xe0, 0x9e, 0x80,
	0x3a, 0xaa, 0x9c, 0xf2, 0xf1, 0xa7, 0x0b, 0x38, 0xf3, 0x02, 0xe5, 0x57, 0x07, 0x1d, 0xf3, 0x02,
	0x3d, 0x84, 0xea, 0x82, 0x15, 0x3d, 0xc5, 0x5b, 0x91, 0x1e, 0x49, 0x46, 0x1d, 0xee, 0x0b, 0xaa,
	0x41, 0xaf, 0x01, 0x1b, 0x27, 0x11, 0x17, 0x99, 0x86, 0xe7, 0x3d, 0x86, 0xda, 0x12, 0x42, 0x13,
	0x2e, 0xd8, 0xd3, 0x60, 0xd1, 0x14, 0xa6, 0xc1, 0x7c, 0xe1, 0xac, 0xdd, 0xb4, 0x8d, 0xb3, 0xde,
	0x4b, 0x68, 0x1c, 0x31, 0xb1, 0xd6, 0xc2, 0xee, 0x1c, 0xb1, 0xf7, 0x7d, 0xd8, 0xc8, 0x9a, 0x55,
	0xdd, 0x3d, 0x8f, 0xcd, 0x47, 0x8f, 0x86, 0xa5, 0x7d, 0xb3, 0x29, 0x51, 0x2f, 0x05, 0x82, 0xee,
	0xdf, 0xd1, 0x91, 0x6d, 0x28, 0x24, 0x6f, 0xde, 0x70, 0x66, 0xea, 0x5e, 0x4b, 0xd8, 0x19, 0x26,
	0xd1, 0x34, 0x32, 0x9f, 0xa0, 0x12, 0xbc, 0xbf, 0x5b, 0x50, 0xd4, 0x84, 0x1f, 0xd8, 0x56, 0xcd,
	0xbb, 0xa0, 0x9e, 0x3d, 0xb9, 0x26, 0x0f, 0x20, 0x1f, 0x4c, 0xc6, 0x89, 0x34, 0x5d, 0x3f, 0x68,
	0x98, 0xb8, 0xf6, 0xb1, 0x2e, 0x5b, 0x93, 0x71, 0xf2, 0xd4, 0xa6, 0xad, 0x57, 0x54, 0x9e, 0xc1,
	0x17, 0x8e, 0x0f, 0x65, 0x16, 0x56, 0x6a, 0xdc, 0xe1, 0xa8, 0xe4, 0x3d, 0x81, 0x92, 0x51, 0xc2,
	0x69, 0x8f, 0xb6, 0x5e, 0xb9, 0xf7, 0x08, 0x40, 0xa1, 0x7f, 0xdc, 0x3a, 0x78, 0xfc, 0x03, 0xd7,
	0xc2, 0x41, 0xab, 0xa3, 0x85, 0x1c, 0x0a, 0x66, 0x58, 0xb2, 0xbd, 0xbf, 0x58, 0xe0, 0xae, 0xe4,
	0x0f, 0x33, 0xfe, 0x25, 0xd4, 0x44, 0x22, 0x82, 0xc9, 0x30, 0x65, 0xa3, 0x24, 0xd5, 0x63, 0x7d,
	0x8d, 0x56, 0x25, 0x48, 0x15, 0x46, 0xbe, 0x80, 0x8a, 0x3a, 0x34, 0x0b, 0xc6, 0x8c, 0xeb, 0x60,
	0x41, 0x42, 0xe7, 0x88, 0x2c, 0x73, 0x67, 0x67, 0x72, 0x97, 0xc9, 0x74, 0x7e, 0x25, 0xd3, 0x5f,
	0xea, 0x5b, 0x76, 0x9a, 0x76, 0xf6, 0x96, 0x65, 0xa4, 0xae, 0xa3, 0x2f, 0xfb, 0xcf, 0x16, 0x34,
	0xd0, 0xdb, 0xd5, 0xa6, 0xfb, 0xb1, 0x97, 0xbd, 0xec, 0xb6, 0xd6, 0xed, 0xdd, 0xd6, 0xca, 0x76,
	0xbe, 0xa5, 0xc3, 0xce, 0xed, 0xa5, 0x51, 0xc8, 0x96, 0xc6, 0x6f, 0xa0, 0xa0, 0x9c, 0xfb, 0xaf,
	0xf4, 0xdc, 0x26, 0x94, 0xf8, 0xf0, 0xb6, 0xae, 0x5b, 0xe4, 0x8a, 0xd5, 0xfb, 0xab, 0xa5, 0xbe,
	0xf0, 0x6c, 0xf7, 0xff, 0x7f, 0x5c, 0xe7, 0xd7, 0x99, 0xd7, 0x01, 0x2f, 0xb4, 0xb8, 0xaf, 0x3c,
	0x32, 0xf7, 0x69, 0x9e, 0x89, 0x36, 0x34, 0x28, 0x9b, 0x26, 0xd7, 0x2c, 0x3b, 0x83, 0x7d, 0xe4,
	0x85, 0x62, 0x57, 0xcb, 0x1a, 0xc1, 0x21, 0xeb, 0x15, 0x6c, 0x76, 0xd8, 0x84, 0xad, 0x8f, 0x29,
	0x77, 0x6f, 0x50, 0x9b, 0xd0, 0x58, 0x35, 0x8c, 0x6c, 0xaf, 0x61, 0x4b, 0x81, 0x9f, 0xbc, 0x1f,
	0x6e, 0x01, 0x59, 0xb3, 0x8c, 0x7c, 0x0f, 0xa0, 0x4a, 0x19, 0xff, 0xa0, 0xb0, 0x70, 0x82, 0xd7,
	0x67, 0x51, 0xf3, 0x17, 0x50, 0xef, 0x44, 0x7c, 0x96, 0x79, 0xa5, 0x3e, 0x03, 0x47, 0x44, 0x62,
	0xc2, 0xb2, 0x0f, 0x86, 0x4b, 0x15, 0x86, 0xe3, 0xe0, 0x28, 0x89, 0x05, 0x8b, 0x45, 0x76, 0xb4,
	0x7e, 0x4e, 0x0d, 0x4a, 0x76, 0x21, 0x1f, 0x8d, 0x92, 0x78, 0xe5, 0x37, 0xb6, 0x45, 0x25, 0x86,
	0xbf, 0x8e, 0x16, 0x5c, 0xfa, 0x77, 0x4f, 0xca, 0xf8, 0xd5, 0x44, 0x48, 0xaa, 0x12, 0xd5, 0xd2,
	0xc1, 0x63, 0x28, 0xa8, 0x9f, 0xd4, 0xe4, 0x7b, 0x50, 0xf4, 0xe7, 0x6c, 0x74, 0x25, 0x18, 0xa9,
	0xaf, 0xfe, 0xcc, 0xde, 0x5d, 0x93, 0xbd, 0x7b, 0x87, 0xa5, 0x9f, 0x15, 0xe4, 0x9f, 0x11, 0xfc,
	0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x35, 0x32, 0x0d, 0x80, 0xb4, 0x10, 0x00, 0x00,
}
